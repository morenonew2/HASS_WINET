###########################################################################
#                      NEWAPI WINET GESTIONE
###########################################################################
homeassistant:
automation:
  alias: Climate Stufa set temp
  description: ""
  trigger:
    - platform: state
      entity_id:
        - sensor.temperatura_aria_impostata
  condition: []
  action:
    - service: climate.set_temperature
      data:
        temperature: |
          {{ states("sensor.temperatura_aria_impostata") | int }}
      target:
        entity_id: climate.piazzetta
  mode: single

###########################################################################
#                      INPUT
###########################################################################

input_boolean:
  attiva_cronotermostato:
    name: "Attiva crono" 
    icon: mdi:thermostat-box  
  
  potenze_winet:  
    name: "modifica potenze"
    icon: mdi:sun-compass

###########################################################################
#                      REST COMMAND
###########################################################################

########  comandi in scrittura  ###############
rest_command:
  set_power:
    url: 'http://{{ states("input_text.valore_ip_locale_stufa") }}/api/power/{{ states("input_select.seleziona_potenza") }}' #input_select.seleziona_potenza
  set_temperatura:
    url: 'http://{{ states("input_text.valore_ip_locale_stufa") }}/api/temperature/air/{{ (states("input_number.scegli_temperatura") | int * 2)  }}' #input_number.scegli_temperatura
  set_temperatura_water:
    url: 'http://{{ states("input_text.valore_ip_locale_stufa") }}/api/temperature/water/{{ (states("input_number.scegli_temperatura_water") | int)  }}' #input_number.scegli_temperatura_water 
  accensione_stufa:
    url: 'http://{{ states("input_text.valore_ip_locale_stufa") }}/api/status/1'
  spegnimento_stufa:
    url: 'http://{{ states("input_text.valore_ip_locale_stufa") }}/api/status/0'

####    comandi in lettura ###################
rest:
######   VALORI GLOBAL   ##########################
  - scan_interval: 15
    resource_template: http://{{ states("input_text.valore_ip_locale_stufa") }}/api/global ##input_text.valore_ip_locale_stufa
    sensor:
      - name: "STATUS STUFA"
        unique_id: status_stufa
        value_template: >
          {% set st = value_json.status %}
          {% if st == 0 %}
            SPENTO
          {% elif st == 1 %}
            ACCESO
          {% elif st == 2 %}
            PULIZIA FINALE
          {% elif st == 3 %}
            ALARM
          {% elif st == 4 %}
            UNMANAGED
          {% else %}
            UNKNOWN
          {% endif %}
      - name: "STATUS DESCRIPTION STUFA" ### DESCRIZIONE STATUS ###
        unique_id: status_description_stufa
        value_template: >  
          {{ value_json.description }}
      - name: "Potenza impostata" ### potenza IMPOSTATA ###
        unique_id: stufa_power_set
        value_template: >
          {{ value_json.power }}          
      - name: "Temperatura aria " ### TEMPERATURA ARIA ### 
        unique_id: temperatura_aria 
        device_class: temperature
        unit_of_measurement: '°C'
        value_template: >
          {{ value_json.air | float(2) / 2 }}
      - name: "Temperatura aria impostata" ### TEMPERATURA IMPOSTATA ###
        unique_id: temperatura_aria_impostata      
        device_class: temperature
        unit_of_measurement: '°C'
        value_template: >
          {{ value_json.setAir | float(2) / 2 }}   
      - name: "Temperatura acqua impostata" ### TEMPERATURA ACQUA IMPOSTATA ###
        unique_id: temperatura_water_impostata      
        #device_class: temperature
        #unit_of_measurement: '°C'
        value_template: >
          {% set st4 = value_json.setWater %}
          {% if st4 == None %}
            ---
          {% else %}
            {{ value_json.setWater }}           
          {% endif %}      
      - name: "Temperatura acqua" ### TEMPERATURA ACQUA ###
        unique_id: temperatura_water 
        #device_class: temperature
        #unit_of_measurement: '°C'
        value_template: >
          {% set st3 = value_json.water %}
          {% if st3 == None %}
            ---
          {% else %}
            {{ value_json.water }}          
          {% endif %}     
      - name: "Temperatura fumi" ### TEMPERATURA FUMI ###
        unique_id: temperatura_fumi 
        #unit_of_measurement: '°C'
        value_template: >
          {% set st1 = value_json.gasflue %}  
          {% if st1 <= 30 %}
            ---
          {% else %}
            {{ value_json.gasflue | float(2) }} 
          {% endif %} 
      - name: "N. giri Estrattore fumi" ### N. GIRI ESTRATTORE ###
        unique_id: rpm_extractor 
        unit_of_measurement: 'rpm'
        value_template: >
          {% set st2 = value_json.rpmExtractor %}
          {% if st2 == None %}
            0
          {% else %}
            {{ value_json.rpmExtractor | float(0) }}           
          {% endif %}           
 
###########################################################################
#                      template switch
###########################################################################

# ACCENSIONE SPEGNIMENTO
switch:
  - platform: template
    switches:
      winet:
        friendly_name: "Stufa On/Off"
        unique_id: stufa_on_off
        value_template: "{{ is_state('sensor.status_stufa', 'ACCESO') }}"
        turn_on:
          service: rest_command.accensione_stufa
        turn_off:
          service: rest_command.spegnimento_stufa
